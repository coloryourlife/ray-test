apiVersion: ray.io/v1
kind: RayService
metadata:
  name: llama-service
spec:
  serveConfigV2: |
    applications:
    - name: llama_app
      import_path: llama_service:model
      route_prefix: /llama
      deployments:
      - name: VLLMDeployment
        max_ongoing_requests: 20
        max_replicas_per_node: 1
        autoscaling_config:
          target_ongoing_requests: 10
          min_replicas: 1
          max_replicas: 5
        ray_actor_options:
          num_gpus: 1
      runtime_env:
        working_dir: "https://github.com/coloryourlife/ray-test/archive/refs/tags/v0.5.2.zip"
        pip: ["vllm==0.7.0", "aioboto3", "aiofiles"]
        env_vars:
          MODEL_ID: "meta-llama/Llama-3.2-1B-Instruct"
          TENSOR_PARALLELISM: "1"
          PIPELINE_PARALLELISM: "1"
  rayClusterConfig:
    enableInTreeAutoscaling: true
    autoscalerOptions:
      upscalingMode: Default
      idleTimeoutSeconds: 600
      image: rayproject/ray-ml:latest
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          cpu: "500m"
          memory: "512Mi"
        requests:
          cpu: "500m"
          memory: "512Mi"
    headGroupSpec:
      rayStartParams:
        # Setting "num-cpus: 0" to avoid any Ray actors or tasks being scheduled on the Ray head Pod.
        num-cpus: "0"
        dashboard-host: '0.0.0.0'
      template:
        spec:
          containers:
          - name: ray-head
            image: rayproject/ray-ml:latest
            volumeMounts:
              - name: model-storage
                mountPath: /models
            env:
            - name: HF_TOKEN
              valueFrom:
                secretKeyRef:
                  name: hf-secret
                  key: hf_api_token
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-access-key
                  key: aws_access_key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-secret-access-key
                  key: aws_secret_access_key
            - name: VLLM_ALLOW_RUNTIME_LORA_UPDATING
              value: "true"
            - name: RAY_enable_autoscaler_v2
              value: "1"
            resources:
              limits:
                cpu: "2"
                memory: "8Gi"
              requests:
                cpu: "2"
                memory: "8Gi"
            ports:
            - containerPort: 6379
              name: gcs-server
            - containerPort: 8265
              name: dashboard
            - containerPort: 10001
              name: client
            - containerPort: 8000
              name: serve
          volumes:
            - name: model-storage
              persistentVolumeClaim:
                claimName: base-model-pvc
    workerGroupSpecs:
    - groupName: gpu-worker-group
      replicas: 1
      minReplicas: 0
      maxReplicas: 5
      rayStartParams: {}
      template:
        spec:
          containers:
            - name: ray-worker
              image: rayproject/ray-ml:latest
              volumeMounts:
                - name: model-storage
                  mountPath: /models
              env:
                - name: HF_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: hf-secret
                      key: hf_api_token
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: aws-access-key
                      key: aws_access_key
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: aws-secret-access-key
                      key: aws_secret_access_key
                - name: VLLM_ALLOW_RUNTIME_LORA_UPDATING
                  value: "true"
              resources:
                limits:
                  cpu: "3"
                  memory: "14Gi"
                  nvidia.com/gpu: "1"
                requests:
                  cpu: "3"
                  memory: "14Gi"
                  nvidia.com/gpu: "1"
          volumes:
            - name: model-storage
              persistentVolumeClaim:
                claimName: base-model-pvc
          restartPolicy: Never
          tolerations:
            - key: "nvidia.com/gpu"
              operator: "Exists"
              effect: "NoSchedule"
